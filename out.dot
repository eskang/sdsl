digraph g {
graph[fontname="courier", splines=true, concentrate=true];
node[fontname="courier"];
edge[fontname="courier", len=1.0];
subgraph cluster_AuthorizationServer_GoodServer { 
style=filled; color=lightgrey;
AuthorizationServer_GoodServer [shape=component];
reqAccessToken_httpReq [shape=rectangle,style="rounded"];
AuthorizationServer_GoodServer -> reqAccessToken_httpReq [dir=none,color=red];
}
AuthorizationServer_GoodServer -> sendResp_httpResp;
subgraph cluster_ResourceServer_GoodServer { 
style=filled; color=lightgrey;
ResourceServer_GoodServer [shape=component];
reqRes_httpReq [shape=rectangle,style="rounded"];
ResourceServer_GoodServer -> reqRes_httpReq [dir=none,color=red];
}
ResourceServer_GoodServer -> sendResp_httpResp;
subgraph cluster_ResourceOwner_GoodServer { 
style=filled; color=lightgrey;
ResourceOwner_GoodServer [shape=component];
reqAuth_httpReq [shape=rectangle,style="rounded"];
ResourceOwner_GoodServer -> reqAuth_httpReq [dir=none,color=red];
}
ResourceOwner_GoodServer -> sendResp_httpResp;
subgraph cluster_BadServer { 
style=filled; color=lightgrey;
BadServer [shape=component];
httpReq2 [shape=rectangle,style="rounded"];
BadServer -> httpReq2 [dir=none,color=red];
}
BadServer -> sendResp_httpResp;
subgraph cluster_Client_GoodClient { 
style=filled; color=lightgrey;
Client_GoodClient [shape=component];
sendResp_httpResp [shape=rectangle,style="rounded"];
Client_GoodClient -> sendResp_httpResp [dir=none,color=red];
}
Client_GoodClient -> reqAuth_httpReq;
Client_GoodClient -> reqRes_httpReq;
Client_GoodClient -> reqAccessToken_httpReq;
Client_GoodClient -> httpReq2;
}
